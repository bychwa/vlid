{"version":3,"sources":["lang/en.js","i18n.js","validate.js","vBase.js","vArray.js","vBoolean.js","util.js","vDate.js","vNumber.js","vObject.js","vString.js","index.js"],"names":["module","exports","ARRAY_BASE","ARRAY_RULE_MIN","ARRAY_RULE_MAX","BOOLEAN_BASE","DATE_BASE","DATE_RULE_MIN","DATE_RULE_MAX","DATE_RULE_ISO","GENERIC_OR","GENERIC_ERROR","GENERIC_ERROR_MULTIPLE","GENERIC_REQUIRED","NUMBER_BASE","NUMBER_RULE_MIN","NUMBER_RULE_MAX","OBJECT_BASE","STRING_BASE","STRING_RULE_ALPHANUM","STRING_RULE_EMAIL","STRING_RULE_MIN","STRING_RULE_MAX","STRING_RULE_REGEX","STRING_RULE_URL","lang","require","t","key","args","i18nString","undefined","Error","format","msg","fields","reduce","currentValue","currentIndex","replace","ValidationError","constructor","captureStackTrace","createError","path","e","_data","_refs","ref","field","r","oget","push","setData","data","validate","any","opts","results","validateSync","Object","assign","async","Promise","all","map","resolve","then","formatResults","result","isValid","err","message","reject","errors","castData","Array","isArray","schema","some","filter","length","acc","val","concat","join","value","cast","oset","_allow","isAllowed","includes","hasPromises","_rules","rule","ruleData","rawData","ruleResult","run","flattenErrors","arrayFlatten","array","every","obj","props","split","shift","lastProp","thisProp","pop","_default","_casts","_doCast","_value","_cast","_base","allow","on","turnOn","default","required","v","forEach","cb","vBase","_schema","items","min","max","index","casted","toLowerCase","isoDateRegExp","RegExp","isISODate","str","test","isValidDate","d","Date","isFinite","castToDate","input","timestamp","parse","isNaN","iso","Number","isObject","prototype","toString","call","shouldCast","dt","isPlainObject","keys","emailRegex","String","alphanum","regex","email","parts","part","len","pattern","url","vArray","vBoolean","vDate","vNumber","vObject","vString","boolean","date","number","object","string"],"mappings":"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","file":"index.js","sourceRoot":"../src","sourcesContent":["module.exports = {\n  ARRAY_BASE: 'Must be an array',\n  ARRAY_RULE_MIN: 'Number of array items must be at least $1',\n  ARRAY_RULE_MAX: 'Number of array items must be no greater than $1',\n  BOOLEAN_BASE: 'Must be a boolean',\n  DATE_BASE: 'Must be a date',\n  DATE_RULE_MIN: 'Date must be after $1',\n  DATE_RULE_MAX: 'Date must be before $1',\n  DATE_RULE_ISO: 'Date must be in ISO-8601 format',\n  GENERIC_OR: ' OR ',\n  GENERIC_ERROR: 'Failed validation',\n  GENERIC_ERROR_MULTIPLE: 'Failed one or more validations',\n  GENERIC_REQUIRED: 'Is required and was not supplied',\n  NUMBER_BASE: 'Must be a number',\n  NUMBER_RULE_MIN: 'Must be larger than or equal to $1',\n  NUMBER_RULE_MAX: 'Must be less than or equal to $1',\n  OBJECT_BASE: 'Must be an object',\n  STRING_BASE: 'Must be a string',\n  STRING_RULE_ALPHANUM: 'Must be an alphanumeric string',\n  STRING_RULE_EMAIL: 'Must be an email address',\n  STRING_RULE_MIN: 'Must be longer than or equal to $1 characters',\n  STRING_RULE_MAX: 'Must be shorter than or equal to $1 characters',\n  STRING_RULE_REGEX: 'Failed regex pattern $1',\n  STRING_RULE_URL: 'Must be a URL',\n};\n","const lang = require('./lang/en');\n\nfunction t(key, ...args) {\n  let i18nString = lang[key];\n\n  if (i18nString === undefined) {\n    throw new Error('Missing translation for key ' + key);\n  }\n\n  return format(i18nString, args);\n}\n\nfunction format(msg, fields) {\n  return fields.reduce(function(msg, currentValue, currentIndex) {\n    return msg.replace('$' + (currentIndex + 1), currentValue);\n  }, msg);\n}\n\nmodule.exports = {\n  t,\n  format,\n};\n","const { t } = require('./i18n');\n\n/**\n * ValidationError class\n */\nclass ValidationError extends Error {\n  constructor(...args) {\n    super(...args);\n    Error.captureStackTrace(this, ValidationError);\n  }\n}\n\nfunction createError(msg, path = null) {\n  let e = new ValidationError(msg);\n\n  e.path = path;\n\n  return e;\n}\n\nlet _data;\nlet _refs = [];\nfunction ref(field) {\n  let r = () => oget(_data, field);\n\n  _refs.push(r);\n\n  return r;\n}\n\nfunction setData(data) {\n  _data = data;\n}\n\n/**\n * Async validation function\n *\n * @return Promise\n */\nfunction validate(any, data, opts = {}) {\n  let results = validateSync(any, data, Object.assign(opts, { async: true }));\n\n  return Promise.all(results.map(r => r instanceof Promise ? r : Promise.resolve(r)))\n    .then(results => formatResults(results, data))\n    .then(result => {\n      if (!result.isValid) {\n        let err = createError(result.message);\n\n        Object.assign(err, result);\n\n        return Promise.reject(err);\n      }\n\n      return result;\n    });\n}\n\n/**\n * Primary validation function\n */\nfunction validateSync(any, data, opts = {}) {\n  let path = opts.path || '';\n  let errors = [];\n  let isValid = true;\n  let results = [];\n  let castData = data;\n\n  // Array = If ANY validation rules passes, the whole thing passes\n  if (Array.isArray(any)) {\n    results = any.map(schema => validateSync(schema, data));\n    isValid = results.some(r => r.isValid === true);\n\n    // Clear errors if isValid (at least one rule returned true)\n    errors = isValid ? [] : results.filter(r => r.errors.length > 0)\n      .map(r => r.errors)\n      .reduce((acc, val) => acc.concat(val), []);\n\n    // Return a single ValidationError\n    if (errors.length > 0) {\n      errors = [createError(t('GENERIC_ERROR_MULTIPLE') + ': (' + errors.map(e => e.message).join(') ' + t('GENERIC_OR') + ' (') + ')', path)];\n    }\n\n    return {\n      data,\n      errors,\n      isValid,\n    };\n  // Normal single validation\n  } else {\n    any.value(data);\n\n    if (opts.cast) {\n      any.cast();\n    }\n\n    castData = any.value();\n\n    if (_data && opts.path) {\n      oset(_data, opts.path, castData);\n    }\n\n    if (any._allow !== undefined) {\n      let isAllowed = Array.isArray(any._allow) ? any._allow.includes(castData) : any._allow === castData;\n\n      if (isAllowed) {\n        return {\n          data: castData,\n          errors: [],\n          isValid: true,\n        };\n      }\n    }\n\n    results = any._rules.map(rule => {\n      let ruleData = rule.rawData ? data : castData;\n      let msg =\n        typeof rule.message === 'function'\n        ? rule.message(ruleData, opts)\n        : rule.message;\n\n      let ruleResult = rule.run(ruleData) || createError(msg, path);\n\n      return ruleResult;\n    });\n    let hasPromises = results.filter(r => r instanceof Promise).length > 0;\n\n    if (hasPromises && !opts.async) {\n      throw createError('Cannot return Promise futures from vlid.validateSync()', path);\n    }\n  }\n\n  return opts.async ? results : formatResults(results, castData, opts.path);\n}\n\nfunction flattenErrors(results) {\n  return arrayFlatten(results.filter(r => r.errors ? r.errors.length > 0 : r instanceof Error)\n      .map(r => r.errors || r));\n}\n\nfunction arrayFlatten(array) {\n  return array.reduce((acc, val) => acc.concat(val), []);\n}\n\n/**\n * Format array of results into a return object\n */\nfunction formatResults(results, data, path = null) {\n  let errors = results.filter(r => r instanceof Error);\n  let isValid = results.every(r => r === true);\n\n  let result = {\n    data,\n    errors,\n    isValid,\n    path,\n  };\n\n  // Show nested results when there is a previous path\n  if (!path) {\n    result.errors = flattenErrors(results);\n    result.results = results.filter(r => r.isValid === false);\n    result.isValid = result.errors.length === 0;\n  }\n\n  return result;\n}\n\n/**\n * Get nested key from provided object\n */\nfunction oget(obj, props) {\n  if (typeof props == 'string') {\n    props = props.split('.');\n  }\n  var prop;\n  while (props.length) {\n    prop = props.shift();\n    obj = obj[prop];\n    if (!obj) {\n      return obj;\n    }\n  }\n  return obj;\n}\n\nfunction oset(obj, props, value) {\n  if (typeof props == 'string') {\n    props = props.split('.');\n  }\n  var lastProp = props.pop();\n  if (!lastProp) {\n    return false;\n  }\n  var thisProp;\n  while ((thisProp = props.shift())) {\n    if (typeof obj[thisProp] == 'undefined') {\n      obj[thisProp] = {};\n    }\n    obj = obj[thisProp];\n    if (!obj || typeof obj != 'object') {\n      return false;\n    }\n  }\n  obj[lastProp] = value;\n  return true;\n}\n\nmodule.exports = {\n  flattenErrors,\n  formatResults,\n  oget,\n  oset,\n  ref,\n  setData,\n  validate,\n  validateSync,\n  ValidationError,\n};\n","const { t } = require('./i18n');\nconst validate = require('./validate');\nconst GENERIC_ERROR = t('GENERIC_ERROR');\n\nmodule.exports = class vBase {\n  constructor() {\n    this._allow;\n    this._default;\n    this._rules = [];\n    this._casts = [];\n    this._doCast = false;\n    this._value;\n\n    this._cast(); // Always run casting rules\n    this._base(); // Always run base validation rule for type\n  }\n\n  // These should be overridden by inheriting classes\n  _base() {}\n  _cast() {}\n\n  allow(value) {\n    this._allow = value;\n    return this;\n  }\n\n  cast(on, turnOn = true) {\n    if (typeof on === 'function') {\n      this._casts.push(on);\n\n      if (this._doCast === false) {\n        this._doCast = turnOn;\n      }\n\n      return this;\n    }\n\n    this._doCast = on === false ? false : true;\n    return this;\n  }\n\n  default(value) {\n    this._default = value;\n    return this.allow(value); // always allow the default value by default\n  }\n\n  required(err = null) {\n    return this.rule(v => v !== undefined && v !== null && v !== '', err || t('GENERIC_REQUIRED'));\n  }\n\n  rule(run, message = GENERIC_ERROR, opts = {}) {\n    if (typeof run !== 'function') {\n      throw new Error('rule() first argument must be a function. Recieved: ' + typeof run);\n    }\n\n    this._rules.push(Object.assign({ run, message }, opts));\n    return this;\n  }\n\n  value(val) {\n    if (val !== undefined) {\n      this._value = val;\n      return this;\n    }\n\n    let castData = this._value === undefined ? this._default : this._value;\n\n    // Cast value if specified (strict by default)\n    if (this._doCast) {\n      this._casts.forEach(cb => castData = cb(castData));\n    }\n\n    return castData;\n  }\n\n  validate(data, opts = {}) {\n    return validate.validate(this, data, opts);\n  }\n\n  validateSync(data, opts = {}) {\n    return validate.validateSync(this, data, opts);\n  }\n};\n","const { t } = require('./i18n');\nconst vBase = require('./vBase');\nconst validate = require('./validate');\n\nmodule.exports = class vArray extends vBase {\n  constructor() {\n    super();\n\n    this._schema;\n  }\n\n  _base() {\n    return this.rule(Array.isArray, value => t('ARRAY_BASE', value));\n  }\n\n  items(schema) {\n    this._schema = schema;\n    return this;\n  }\n\n  min(min, err = null) {\n    return this.rule(\n      value => value.length >= min,\n      value => err || t('ARRAY_RULE_MIN', min)\n    );\n  }\n\n  max(max, err = null) {\n    return this.rule(\n      value => value.length <= max,\n      value => err || t('ARRAY_RULE_MAX', max)\n    );\n  }\n\n  /**\n   * Override base validation\n   */\n  validateSync(data, opts = {}) {\n    let results = [];\n\n    results.push(validate.validateSync(this, data, opts)); // do base validation\n\n    if (!Array.isArray(data)) {\n      return validate.formatResults(results);\n    }\n\n    if (this._schema) {\n      data.forEach((value, index) => {\n        results.push(this._schema.validateSync(value));\n      });\n    }\n\n    return validate.formatResults(results);\n  }\n};\n","const { t } = require('./i18n');\nconst vBase = require('./vBase');\n\nmodule.exports = class vBoolean extends vBase {\n  _base() {\n    return this.rule(\n      value => typeof value === 'boolean',\n      value => t('BOOLEAN_BASE', value)\n    );\n  }\n\n  _cast() {\n    return this.cast(value => {\n      let casted = value;\n      let vt = typeof value;\n      let trueValues = [1, 'true', 't', 'on', 'yes'];\n      let falseValues = [0, 'false', 'f', 'off', 'no', ''];\n\n      // Lowercase strings for comparison\n      value = vt === 'string' ? value.toLowerCase() : value;\n\n      if (trueValues.includes(value)) {\n        casted = true;\n      }\n\n      if (falseValues.includes(value)) {\n        casted = false;\n      }\n\n      return casted;\n    }, false);\n  }\n};\n\n","function val(value) {\n  return typeof value === 'function' ? value() : value;\n}\n\nmodule.exports = { val };\n","const { t } = require('./i18n');\nconst vBase = require('./vBase');\nconst { val } = require('./util');\n\nconst isoDateRegExp = new RegExp( /(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d+([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z))/ );\n\nfunction isISODate( str ) {\n      return isoDateRegExp.test( str );\n}\n\nmodule.exports = class vDate extends vBase {\n  _base() {\n    return this.rule(isValidDate, value => t('DATE_BASE', value));\n  }\n\n  _cast() {\n    return this.cast(castToDate, false);\n  }\n\n  min(min, err = null) {\n    return this.rule(\n      value => value >= val(min),\n      err ? err : () => t('DATE_RULE_MIN', val(min))\n    );\n  }\n\n  max(max, err = null) {\n    return this.rule(\n      value => value <= val(max),\n      err ? err : () => t('DATE_RULE_MAX', val(max))\n    );\n  }\n\n  iso(err = null) {\n    this.cast(); // This rule requires casting (ISO-8601 date strings can be parsed)\n    this._base = () => {};\n\n    // This ISO rule has to be run on the raw input data, not the cast data\n    return this.rule(isISODate, err || t('DATE_RULE_ISO'), { rawData: true });\n  }\n};\n\nfunction isValidDate(d) {\n  return d instanceof Date && isFinite(d);\n}\n\nfunction castToDate(input) {\n  // If not a date, do some stuff\n  if (!(input instanceof Date)) {\n    let timestamp = Date.parse(input);\n\n    if (!isNaN(timestamp)) {\n      return new Date(timestamp);\n    }\n  }\n\n  return input;\n}\n","const { t } = require('./i18n');\nconst vBase = require('./vBase');\n\nmodule.exports = class vNumber extends vBase {\n  _base() {\n    return this.rule(\n      value => typeof value === 'number' && !Number.isNaN(value),\n      value => t('NUMBER_BASE', value)\n    );\n  }\n\n  _cast() {\n    return this.cast(Number, false);\n  }\n\n  min(min, err = null) {\n    return this.rule(\n      value => value >= min,\n      value => err || t('NUMBER_RULE_MIN', min)\n    );\n  }\n\n  max(max, err = null) {\n    return this.rule(\n      value => value <= max,\n      value => err || t('NUMBER_RULE_MAX', max)\n    );\n  }\n};\n","const { t } = require('./i18n');\nconst vBase = require('./vBase');\nconst validate = require('./validate');\n\nmodule.exports = class vObject extends vBase {\n  constructor(schema = {}) {\n    super();\n\n    this._schema = schema || {};\n  }\n\n  _base() {\n    return this.rule(isObject, value => t('OBJECT_BASE', value));\n  }\n\n  /**\n   * Override base validation\n   */\n  validateSync(data, opts = {}) {\n    let results = [];\n    let shouldCast = opts.cast || this._doCast;\n\n    validate.setData(data);\n    results.push(validate.validateSync(this, data, opts)); // do base validation\n\n    let dt = typeof data;\n    let isPlainObject = false;\n\n    if (dt === 'object') {\n      isPlainObject = Object.prototype.toString.call(data) === '[object Object]';\n    }\n\n    if (data && isPlainObject) {\n      Object.keys(this._schema).forEach(path => {\n        results.push(this._schema[path].validateSync(data[path], { data, path, cast: shouldCast }));\n      });\n    }\n\n    return validate.formatResults(results);\n  }\n};\n\nfunction isObject(value) {\n  return (\n    typeof value === 'object'\n    && Object.prototype.toString.call(value) === '[object Object]'\n  );\n}\n","const { t } = require('./i18n');\nconst vBase = require('./vBase');\n\n/* @link https://github.com/manishsaraan/email-validator/blob/master/index.js */\nconst emailRegex = /^[-!#$%&'*+\\/0-9=?A-Z^_a-z{|}~](\\.?[-!#$%&'*+\\/0-9=?A-Z^_a-z`{|}~])*@[a-zA-Z0-9](-*\\.?[a-zA-Z0-9])*\\.[a-zA-Z](-?[a-zA-Z0-9])+$/;\n\nmodule.exports = class vString extends vBase {\n  _base() {\n    return this.rule(\n      value => typeof value === 'string',\n      value => t('STRING_BASE', value)\n    );\n  }\n\n  _cast() {\n    return this.cast(String, false);\n  }\n\n  alphanum() {\n    return this.regex(/^[a-zA-Z0-9]+$/, t('STRING_RULE_ALPHANUM'));\n  }\n\n  email(err) {\n    return this.rule(function(email) {\n      if (!email) return false;\n\n      if (email.length > 254) return false;\n\n      var valid = emailRegex.test(email);\n      if (!valid) return false;\n\n      // Further checking of some things regex can't handle\n      var parts = email.split('@');\n      if (parts[0].length > 64) return false;\n\n      var domainParts = parts[1].split('.');\n      if (\n        domainParts.some(function(part) {\n          return part.length > 63;\n        })\n      )\n        return false;\n\n      return true;\n    }, err || t('STRING_RULE_EMAIL'));\n  }\n\n  min(len, err = null) {\n    return this.rule(value => value.length >= len, err || t('STRING_RULE_MIN', len));\n  }\n\n  max(len, err = null) {\n    return this.rule(value => value.length <= len, err || t('STRING_RULE_MAX', len));\n  }\n\n  regex(pattern, err = null) {\n    return this.rule(value => pattern.test(value), err || t('STRING_RULE_REGEX', pattern));\n  }\n\n  url(str, err = null) {\n    return this.rule(function validURL(str) {\n      var pattern = new RegExp(\n        '^(https?:\\\\/\\\\/)?' + // protocol\n        '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' + // domain name\n        '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // OR ip (v4) address\n        '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' + // port and path\n        '(\\\\?[;&a-z\\\\d%_.~+=-]*)?' + // query string\n          '(\\\\#[-a-z\\\\d_]*)?$',\n        'i'\n      ); // fragment locator\n      return !!pattern.test(str);\n    }, err || t('STRING_RULE_URL'));\n  }\n};\n","const vArray = require('./vArray');\nconst vBase = require('./vBase');\nconst vBoolean = require('./vBoolean');\nconst vDate = require('./vDate');\nconst vNumber = require('./vNumber');\nconst vObject = require('./vObject');\nconst vString = require('./vString');\nconst { validate, validateSync, ref } = require('./validate');\n\nmodule.exports = {\n  any: () => new vBase(),\n  array: () => new vArray(),\n  boolean: () => new vBoolean(),\n  date: () => new vDate(),\n  number: () => new vNumber(),\n  object: (obj) => new vObject(obj),\n  ref,\n  string: () => new vString(),\n  validate(schema, data) {\n    return schema.validate ? schema.validate(data) : validate(schema, data);\n  },\n  validateSync(schema, data) {\n    return schema.validateSync ? schema.validateSync(data) : validateSync(schema, data);\n  },\n};\n"]}