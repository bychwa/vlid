{"version":3,"sources":["util.js","lang/en.js","i18n.js","validate.js","vBase.js","vArray.js","vBoolean.js","vDate.js","vNumber.js","vObject.js","vString.js","index.js"],"names":["isObject","val","Array","isArray","isObjectObject","o","Object","prototype","toString","call","isPlainObject","ctor","prot","constructor","hasOwnProperty","value","module","exports","ARRAY_BASE","ARRAY_RULE_MIN","ARRAY_RULE_MAX","BOOLEAN_BASE","DATE_BASE","DATE_RULE_MIN","DATE_RULE_MAX","DATE_RULE_ISO","GENERIC_OR","GENERIC_ERROR","GENERIC_ERROR_MULTIPLE","GENERIC_REQUIRED","NUMBER_BASE","NUMBER_RULE_MIN","NUMBER_RULE_MAX","OBJECT_BASE","STRING_BASE","STRING_RULE_ALPHANUM","STRING_RULE_EMAIL","STRING_RULE_MIN","STRING_RULE_MAX","STRING_RULE_REGEX","STRING_RULE_URL","lang","require","t","key","args","i18nString","undefined","Error","format","msg","fields","reduce","currentValue","currentIndex","replace","ValidationError","captureStackTrace","createError","path","e","_data","_refs","ref","field","r","oget","push","setData","data","validate","any","opts","results","validateSync","assign","async","Promise","all","map","resolve","then","formatResults","result","isValid","err","message","reject","errors","castValue","schema","some","filter","length","acc","concat","join","cast","oset","_allow","isAllowed","includes","hasPromises","_rules","rule","ruleValue","originalValue","ruleResult","run","flattenErrors","arrayFlatten","array","every","obj","props","split","shift","lastProp","thisProp","pop","_default","_casts","_doCast","_value","_cast","_base","allow","on","turnOn","default","required","v","castData","forEach","cb","vBase","_schema","items","min","max","index","casted","toLowerCase","isoDateRegExp","RegExp","isISODate","str","test","isValidDate","d","Date","isFinite","castToDate","input","timestamp","parse","isNaN","iso","Number","vObject","shouldCast","keys","nPath","nOpts","emailRegex","String","alphanum","regex","email","parts","part","len","pattern","url","vArray","vBoolean","vDate","vNumber","vString","boolean","date","number","object","string"],"mappings":"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","file":"index.js","sourceRoot":"../src","sourcesContent":["function isObject(val) {\n    return val != null && typeof val === 'object' && Array.isArray(val) === false;\n}\n\nfunction isObjectObject(o) {\n  return isObject(o) === true\n    && Object.prototype.toString.call(o) === '[object Object]';\n}\n\nfunction isPlainObject(o) {\n  var ctor,prot;\n\n  if (isObjectObject(o) === false) return false;\n\n  // If has modified constructor\n  ctor = o.constructor;\n  if (typeof ctor !== 'function') return false;\n\n  // If has modified prototype\n  prot = ctor.prototype;\n  if (isObjectObject(prot) === false) return false;\n\n  // If constructor does not have an Object-specific method\n  if (prot.hasOwnProperty('isPrototypeOf') === false) {\n    return false;\n  }\n\n  // Most likely a plain Object\n  return true;\n}\n\nfunction val(value) {\n  return typeof value === 'function' ? value() : value;\n}\n\nmodule.exports = { isPlainObject, val };\n","module.exports = {\n  ARRAY_BASE: 'Must be an array',\n  ARRAY_RULE_MIN: 'Number of array items must be at least $1',\n  ARRAY_RULE_MAX: 'Number of array items must be no greater than $1',\n  BOOLEAN_BASE: 'Must be a boolean',\n  DATE_BASE: 'Must be a date',\n  DATE_RULE_MIN: 'Date must be after $1',\n  DATE_RULE_MAX: 'Date must be before $1',\n  DATE_RULE_ISO: 'Date must be in ISO-8601 format',\n  GENERIC_OR: ' OR ',\n  GENERIC_ERROR: 'Failed validation',\n  GENERIC_ERROR_MULTIPLE: 'Failed one or more validations',\n  GENERIC_REQUIRED: 'Is required and was not supplied',\n  NUMBER_BASE: 'Must be a number',\n  NUMBER_RULE_MIN: 'Must be larger than or equal to $1',\n  NUMBER_RULE_MAX: 'Must be less than or equal to $1',\n  OBJECT_BASE: 'Must be an object',\n  STRING_BASE: 'Must be a string',\n  STRING_RULE_ALPHANUM: 'Must be an alphanumeric string',\n  STRING_RULE_EMAIL: 'Must be an email address',\n  STRING_RULE_MIN: 'Must be longer than or equal to $1 characters',\n  STRING_RULE_MAX: 'Must be shorter than or equal to $1 characters',\n  STRING_RULE_REGEX: 'Failed regex pattern $1',\n  STRING_RULE_URL: 'Must be a URL',\n};\n","const lang = require('./lang/en');\n\nfunction t(key, ...args) {\n  let i18nString = lang[key];\n\n  if (i18nString === undefined) {\n    throw new Error('Missing translation for key ' + key);\n  }\n\n  return format(i18nString, args);\n}\n\nfunction format(msg, fields) {\n  return fields.reduce(function(msg, currentValue, currentIndex) {\n    return msg.replace('$' + (currentIndex + 1), currentValue);\n  }, msg);\n}\n\nmodule.exports = {\n  t,\n  format,\n};\n","const { t } = require('./i18n');\n\n/**\n * ValidationError class\n */\nclass ValidationError extends Error {\n  constructor(...args) {\n    super(...args);\n    if(Error.captureStackTrace) {\n      Error.captureStackTrace(this, ValidationError);\n    }\n  }\n}\n\nfunction createError(msg, path = null, value = null) {\n  let e = new ValidationError(msg);\n\n  e.value = value;\n  e.path = path;\n\n  return e;\n}\n\nlet _data;\nlet _refs = [];\nfunction ref(field) {\n  let r = () => oget(_data, field);\n\n  _refs.push(r);\n\n  return r;\n}\n\nfunction setData(data) {\n  _data = data;\n}\n\n/**\n * Async validation function\n *\n * @return Promise\n */\nfunction validate(any, value, opts = {}) {\n  let results = validateSync(any, value, Object.assign(opts, { async: true }));\n\n  return Promise.all(results.map(r => (r instanceof Promise ? r : Promise.resolve(r))))\n    .then(results => formatResults(results, value))\n    .then(result => {\n      if (!result.isValid) {\n        let err = createError(result.message);\n\n        Object.assign(err, result);\n\n        return Promise.reject(err);\n      }\n\n      return result;\n    });\n}\n\n/**\n * Primary validation function\n */\nfunction validateSync(any, value, opts = {}) {\n  let path = opts.path || '';\n  let errors = [];\n  let isValid = true;\n  let results = [];\n  let castValue = value;\n\n  // Array = If ANY validation rules passes, the whole thing passes\n  if (Array.isArray(any)) {\n    results = any.map(schema => validateSync(schema, value));\n    isValid = results.some(r => r.isValid === true);\n\n    // Clear errors if isValid (at least one rule returned true)\n    errors = isValid\n      ? []\n      : results\n          .filter(r => r.errors.length > 0)\n          .map(r => r.errors)\n          .reduce((acc, val) => acc.concat(val), []);\n\n    // Return a single ValidationError\n    if (errors.length > 0) {\n      errors = [\n        createError(\n          t('GENERIC_ERROR_MULTIPLE') + ': (' + errors.map(e => e.message).join(') ' + t('GENERIC_OR') + ' (') + ')',\n          path,\n          value\n        ),\n      ];\n    }\n\n    return {\n      value,\n      errors,\n      isValid,\n    };\n    // Normal single validation\n  } else {\n    any.value(value);\n\n    if (opts.cast) {\n      any.cast();\n    }\n\n    castValue = any.value();\n\n    if (_data && opts.path) {\n      oset(_data, opts.path, castValue);\n    }\n\n    if (any._allow !== undefined) {\n      let isAllowed = Array.isArray(any._allow) ? any._allow.includes(castValue) : any._allow === castValue;\n\n      if (isAllowed) {\n        return {\n          value: castValue,\n          errors: [],\n          isValid: true,\n        };\n      }\n    }\n\n    results = any._rules.map(rule => {\n      let ruleValue = rule.originalValue ? value : castValue;\n      let msg = typeof rule.message === 'function' ? rule.message(ruleValue, opts) : rule.message;\n\n      let ruleResult = rule.run(ruleValue) || createError(msg, path, value);\n\n      return ruleResult;\n    });\n    let hasPromises = results.filter(r => r instanceof Promise).length > 0;\n\n    if (hasPromises && !opts.async) {\n      throw createError('Cannot return Promise futures from vlid.validateSync()', path, value);\n    }\n  }\n\n  return opts.async ? results : formatResults(results, castValue, opts.path);\n}\n\nfunction flattenErrors(results) {\n  return arrayFlatten(\n    results.filter(r => (r.errors ? r.errors.length > 0 : r instanceof Error)).map(r => r.errors || r)\n  );\n}\n\nfunction arrayFlatten(array) {\n  return array.reduce((acc, val) => acc.concat(val), []);\n}\n\n/**\n * Format array of results into a return object\n */\nfunction formatResults(results, value, path = null) {\n  let errors = results.filter(r => r instanceof Error);\n  let isValid = results.every(r => r === true);\n\n  let result = {\n    errors,\n    isValid,\n    path,\n    value,\n  };\n\n  // Show nested results when there is a previous path\n  if (!path) {\n    result.errors = flattenErrors(results);\n    result.results = results.filter(r => r.isValid === false);\n    result.isValid = result.errors.length === 0;\n  }\n\n  return result;\n}\n\n/**\n * Get nested key from provided object\n */\nfunction oget(obj, props) {\n  if (typeof props == 'string') {\n    props = props.split('.');\n  }\n  var prop;\n  while (props.length) {\n    prop = props.shift();\n    obj = obj[prop];\n    if (!obj) {\n      return obj;\n    }\n  }\n  return obj;\n}\n\nfunction oset(obj, props, value) {\n  if (typeof props == 'string') {\n    props = props.split('.');\n  }\n  var lastProp = props.pop();\n  if (!lastProp) {\n    return false;\n  }\n  var thisProp;\n  while ((thisProp = props.shift())) {\n    if (typeof obj[thisProp] == 'undefined') {\n      obj[thisProp] = {};\n    }\n    obj = obj[thisProp];\n    if (!obj || typeof obj != 'object') {\n      return false;\n    }\n  }\n  obj[lastProp] = value;\n  return true;\n}\n\nmodule.exports = {\n  flattenErrors,\n  formatResults,\n  oget,\n  oset,\n  ref,\n  setData,\n  validate,\n  validateSync,\n  ValidationError,\n};\n","const { t } = require('./i18n');\nconst validate = require('./validate');\nconst GENERIC_ERROR = t('GENERIC_ERROR');\n\nmodule.exports = class vBase {\n  constructor() {\n    this._allow;\n    this._default;\n    this._rules = [];\n    this._casts = [];\n    this._doCast = false;\n    this._value;\n\n    this._cast(); // Always run casting rules\n    this._base(); // Always run base validation rule for type\n  }\n\n  // These should be overridden by inheriting classes\n  _base() {}\n  _cast() {}\n\n  allow(value) {\n    this._allow = value;\n    return this;\n  }\n\n  cast(on, turnOn = true) {\n    if (typeof on === 'function') {\n      this._casts.push(on);\n\n      if (this._doCast === false) {\n        this._doCast = turnOn;\n      }\n\n      return this;\n    }\n\n    this._doCast = on === false ? false : true;\n    return this;\n  }\n\n  default(value) {\n    this._default = value;\n    return this.allow(value); // always allow the default value by default\n  }\n\n  required(err = null) {\n    return this.rule(v => v !== undefined && v !== null && v !== '', err || t('GENERIC_REQUIRED'));\n  }\n\n  rule(run, message = GENERIC_ERROR, opts = {}) {\n    if (typeof run !== 'function') {\n      throw new Error('rule() first argument must be a function. Recieved: ' + typeof run);\n    }\n\n    this._rules.push(Object.assign({ run, message }, opts));\n    return this;\n  }\n\n  value(val) {\n    if (val !== undefined) {\n      this._value = val;\n      return this;\n    }\n\n    let castData = this._value === undefined ? this._default : this._value;\n\n    // Cast value if specified (strict by default)\n    if (this._doCast) {\n      this._casts.forEach(cb => (castData = cb(castData)));\n    }\n\n    return castData;\n  }\n\n  validate(data, opts = {}) {\n    return validate.validate(this, data, opts);\n  }\n\n  validateSync(data, opts = {}) {\n    return validate.validateSync(this, data, opts);\n  }\n};\n","const { t } = require('./i18n');\nconst vBase = require('./vBase');\nconst validate = require('./validate');\n\nmodule.exports = class vArray extends vBase {\n  constructor() {\n    super();\n\n    this._schema;\n  }\n\n  _base() {\n    return this.rule(Array.isArray, value => t('ARRAY_BASE', value));\n  }\n\n  items(schema) {\n    this._schema = schema;\n    return this;\n  }\n\n  min(min, err = null) {\n    return this.rule(value => value.length >= min, value => err || t('ARRAY_RULE_MIN', min));\n  }\n\n  max(max, err = null) {\n    return this.rule(value => value.length <= max, value => err || t('ARRAY_RULE_MAX', max));\n  }\n\n  /**\n   * Override base validation\n   */\n  validateSync(data, opts = {}) {\n    let results = [];\n\n    results.push(validate.validateSync(this, data, opts)); // do base validation\n\n    if (!Array.isArray(data)) {\n      return validate.formatResults(results, data);\n    }\n\n    if (this._schema) {\n      data.forEach((value, index) => {\n        results.push(this._schema.validateSync(value));\n      });\n    }\n\n    return validate.formatResults(results, data);\n  }\n};\n","const { t } = require('./i18n');\nconst vBase = require('./vBase');\n\nmodule.exports = class vBoolean extends vBase {\n  _base() {\n    return this.rule(value => typeof value === 'boolean', value => t('BOOLEAN_BASE', value));\n  }\n\n  _cast() {\n    return this.cast(value => {\n      let casted = value;\n      let vt = typeof value;\n      let trueValues = [1, 'true', 't', 'on', 'yes'];\n      let falseValues = [0, 'false', 'f', 'off', 'no', ''];\n\n      // Lowercase strings for comparison\n      value = vt === 'string' ? value.toLowerCase() : value;\n\n      if (trueValues.includes(value)) {\n        casted = true;\n      }\n\n      if (falseValues.includes(value)) {\n        casted = false;\n      }\n\n      return casted;\n    }, false);\n  }\n};\n","const { t } = require('./i18n');\nconst vBase = require('./vBase');\nconst { val } = require('./util');\n\nconst isoDateRegExp = new RegExp(\n  /(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d+([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z))/\n);\n\nfunction isISODate(str) {\n  return isoDateRegExp.test(str);\n}\n\nmodule.exports = class vDate extends vBase {\n  _base() {\n    return this.rule(isValidDate, value => t('DATE_BASE', value));\n  }\n\n  _cast() {\n    return this.cast(castToDate, false);\n  }\n\n  min(min, err = null) {\n    return this.rule(value => value >= val(min), err ? err : () => t('DATE_RULE_MIN', val(min)));\n  }\n\n  max(max, err = null) {\n    return this.rule(value => value <= val(max), err ? err : () => t('DATE_RULE_MAX', val(max)));\n  }\n\n  iso(err = null) {\n    this.cast(); // This rule requires casting (ISO-8601 date strings can be parsed)\n    this._base = () => {};\n\n    // This ISO rule has to be run on the raw input data, not the cast data\n    return this.rule(isISODate, err || t('DATE_RULE_ISO'), {\n      originalValue: true,\n    });\n  }\n};\n\nfunction isValidDate(d) {\n  return d instanceof Date && isFinite(d);\n}\n\nfunction castToDate(input) {\n  // If not a date, do some stuff\n  if (!(input instanceof Date)) {\n    let timestamp = Date.parse(input);\n\n    if (!isNaN(timestamp)) {\n      return new Date(timestamp);\n    }\n  }\n\n  return input;\n}\n","const { t } = require('./i18n');\nconst vBase = require('./vBase');\n\nmodule.exports = class vNumber extends vBase {\n  _base() {\n    return this.rule(value => typeof value === 'number' && !Number.isNaN(value), value => t('NUMBER_BASE', value));\n  }\n\n  _cast() {\n    return this.cast(Number, false);\n  }\n\n  min(min, err = null) {\n    return this.rule(value => value >= min, value => err || t('NUMBER_RULE_MIN', min));\n  }\n\n  max(max, err = null) {\n    return this.rule(value => value <= max, value => err || t('NUMBER_RULE_MAX', max));\n  }\n};\n","const { t } = require('./i18n');\nconst vBase = require('./vBase');\nconst validate = require('./validate');\nconst { isPlainObject } = require('./util');\n\nmodule.exports = class vObject extends vBase {\n  constructor(schema = {}) {\n    super();\n\n    this._schema = schema || {};\n  }\n\n  _base() {\n    return this.rule(isPlainObject, value => t('OBJECT_BASE', value));\n  }\n\n  /**\n   * Override base validation\n   */\n  validateSync(value, opts = {}) {\n    let results = [];\n    let shouldCast = opts.cast || this._doCast;\n\n    validate.setData(value);\n    results.push(validate.validateSync(this, value, opts)); // do base validation\n\n    if (value && isPlainObject(value)) {\n      Object.keys(this._schema).forEach(path => {\n        let schema = validate.oget(this._schema, path);\n        let val = validate.oget(value, path);\n        let nPath = opts.path ? opts.path + '.' + path : path;\n        let nOpts = Object.assign({}, opts, { path: nPath, cast: shouldCast });\n\n        if (isPlainObject(schema) && !(schema instanceof vBase)) {\n          results.push(new vObject(schema).validateSync(val, nOpts));\n        } else {\n          results.push(schema.validateSync(val, nOpts));\n        }\n      });\n    }\n\n    return validate.formatResults(results, value);\n  }\n};\n","const { t } = require('./i18n');\nconst vBase = require('./vBase');\n\n/* @link https://github.com/manishsaraan/email-validator/blob/master/index.js */\nconst emailRegex = /^[-!#$%&'*+\\/0-9=?A-Z^_a-z{|}~](\\.?[-!#$%&'*+\\/0-9=?A-Z^_a-z`{|}~])*@[a-zA-Z0-9](-*\\.?[a-zA-Z0-9])*\\.[a-zA-Z](-?[a-zA-Z0-9])+$/;\n\nmodule.exports = class vString extends vBase {\n  _base() {\n    return this.rule(value => typeof value === 'string', value => t('STRING_BASE', value));\n  }\n\n  _cast() {\n    return this.cast(String, false);\n  }\n\n  alphanum() {\n    return this.regex(/^[a-zA-Z0-9]+$/, t('STRING_RULE_ALPHANUM'));\n  }\n\n  email(err) {\n    return this.rule(function(email) {\n      if (!email) return false;\n\n      if (email.length > 254) return false;\n\n      var valid = emailRegex.test(email);\n      if (!valid) return false;\n\n      // Further checking of some things regex can't handle\n      var parts = email.split('@');\n      if (parts[0].length > 64) return false;\n\n      var domainParts = parts[1].split('.');\n      if (\n        domainParts.some(function(part) {\n          return part.length > 63;\n        })\n      )\n        return false;\n\n      return true;\n    }, err || t('STRING_RULE_EMAIL'));\n  }\n\n  min(len, err = null) {\n    return this.rule(value => value.length >= len, err || t('STRING_RULE_MIN', len));\n  }\n\n  max(len, err = null) {\n    return this.rule(value => value.length <= len, err || t('STRING_RULE_MAX', len));\n  }\n\n  regex(pattern, err = null) {\n    return this.rule(value => pattern.test(value), err || t('STRING_RULE_REGEX', pattern));\n  }\n\n  url(err = null) {\n    return this.rule(function validURL(str) {\n      var pattern = new RegExp(\n        '^(https?:\\\\/\\\\/)?' + // protocol\n        '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' + // domain name\n        '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // OR ip (v4) address\n        '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' + // port and path\n        '(\\\\?[;&a-z\\\\d%_.~+=-]*)?' + // query string\n          '(\\\\#[-a-z\\\\d_]*)?$',\n        'i'\n      ); // fragment locator\n      return !!pattern.test(str);\n    }, err || t('STRING_RULE_URL'));\n  }\n};\n","const { isPlainObject } = require('./util');\nconst vArray = require('./vArray');\nconst vBase = require('./vBase');\nconst vBoolean = require('./vBoolean');\nconst vDate = require('./vDate');\nconst vNumber = require('./vNumber');\nconst vObject = require('./vObject');\nconst vString = require('./vString');\nconst { validate, validateSync, ValidationError, ref } = require('./validate');\n\nmodule.exports = {\n  any: () => new vBase(),\n  array: () => new vArray(),\n  boolean: () => new vBoolean(),\n  date: () => new vDate(),\n  number: () => new vNumber(),\n  object: obj => new vObject(obj),\n  ref,\n  string: () => new vString(),\n  validate(schema, data) {\n    if (!schema.value && isPlainObject(schema)) {\n      schema = new vObject(schema);\n    }\n\n    return schema.validate ? schema.validate(data) : validate(schema, data);\n  },\n  validateSync(schema, data) {\n    if (!schema.value && isPlainObject(schema)) {\n      schema = new vObject(schema);\n    }\n\n    return schema.validateSync ? schema.validateSync(data) : validateSync(schema, data);\n  },\n  ValidationError,\n};\n"]}